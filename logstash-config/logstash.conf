input {
  beats {
    port => 5044
  }
}

filter {
  mutate {
    gsub => [
      "message", "\\e\[[\d;]+m", "",
      "message", "\[\d+m", "",
      "message", "\[1;\d+m", "",
      "message", "\[m", ""
    ]
  }
  if [docker][container][labels][com_docker_compose_service] {
    mutate {
      add_field => { "service" => "%{[docker][container][labels][com_docker_compose_service]}" }
    }
  }
  
  grok {
    match => { 
      "message" => [
        "%{TIMESTAMP_ISO8601:timestamp}\s+%{LOGLEVEL:log_level}\s*\[%{DATA:thread}\]\s+%{JAVACLASS:class}: \[%{DATA:connection_id}, %{DATA:connection_details}\] %{GREEDYDATA:log_message}(?:\n%{GREEDYDATA:stacktrace})?",
        
        "%{TIMESTAMP_ISO8601:timestamp}\s+%{LOGLEVEL:log_level}\s*\[%{DATA:thread}\]\s+%{JAVACLASS:class}: %{GREEDYDATA:log_message}"
      ]
    }
    overwrite => ["message"]
  }

  date {
    match => ["timestamp", "yyyy-MM-dd'T'HH:mm:ss,SSS"]
    target => "@timestamp"
  }

  mutate {
    gsub => [
      "log_message", "\[m", "",
      "thread", "\[1;34m", ""
    ]
    remove_field => ["timestamp"]
  }
}

output {
  elasticsearch {
    hosts => ["http://elasticsearch:9200"]
    index => "docker-logs-%{+YYYY.MM.dd}"
  }
}